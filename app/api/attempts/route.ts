import { NextResponse } from 'next/server';import { readDB, writeDB, uid } from '@lib/db';
function computeScore(base:number, accuracy:number, timeLimit:number, timeTaken:number, hints:number, hintCost:number){ const timeBonus=Math.max(0, Math.floor((timeLimit - timeTaken)/10)); const hintPenalty=hints*hintCost; const score=Math.floor(base*accuracy); const finalScore=Math.max(0, score + timeBonus - hintPenalty); return {score,timeBonus,hintPenalty,finalScore}; }
export async function GET(){ const db=await readDB(); return NextResponse.json(db.attempts); }
export async function POST(req:Request){ const {missionId,correctCount,totalItems,timeTakenSeconds,hintsUsed=0,userEmail='guest@example.com',userId='guest'}=await req.json(); if(!missionId||typeof correctCount!=='number'||typeof totalItems!=='number'||typeof timeTakenSeconds!=='number') return NextResponse.json({error:'missionId, correctCount, totalItems, timeTakenSeconds required'},{status:400}); const db=await readDB(); const mission=db.missions.find((m:any)=>m.id===missionId); if(!mission) return NextResponse.json({error:'mission not found'},{status:404}); const accuracy=Math.max(0, Math.min(1, totalItems>0? correctCount/totalItems:0)); const {score,timeBonus,hintPenalty,finalScore}=computeScore(mission.base_points, accuracy, mission.time_limit_seconds, timeTakenSeconds, hintsUsed, mission.hint_cost); const attempt={id:uid(),user_id:userId,user_email:userEmail,mission_id:missionId,accuracy,timeTakenSeconds,hintsUsed,base:mission.base_points,timeBonus,hintPenalty,score,finalScore,created_at:new Date().toISOString()}; db.attempts.push(attempt); await writeDB(db); return NextResponse.json(attempt,{status:201}); }